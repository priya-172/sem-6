Q8.
 
 CREATE TABLE SALESPEOPLE_54(
         SNUM NUMBER PRIMARY KEY,
         SNAME VARCHAR(20),
         CITY VARCHAR(20),
         COMM NUMBER
 );
 ------------------------------------------------------------------------------------------------------
 
 Q9.
 
 DROP TABLE SALESPEOPLE;
 ------------------------------------------------------------------------------------------------------
 
 Q10.
 
 CREATE TABLE CLIENT_MASTER_54(
         CLIENTNO VARCHAR2(6) PRIMARY KEY CHECK( CLIENTNO LIKE 'C%' ),
         NAME VARCHAR2(20) NOT NULL,
         CITY VARCHAR2(15),
         PINCODE NUMBER(8),
         STATE VARCHAR2(15),
         BALANCEDUE NUMBER(10,2)
 );
 
 CREATE TABLE PRODUCT_MASTER_54(
         PRODUCT_NO VARCHAR(6) PRIMARY KEY, CHECK(PRODUCT_NO LIKE 'P%'),
         DESCRIPTION VARCHAR2(15) NOT NULL,
         PROFIT_PERCENT NUMBER(4,2) NOT NULL,
         UNIT_MEASURE VARCHAR2(10) NOT NULL,
         QTY_ON_HAND NUMBER(8) NOT NULL,
         REORDER_LVL NUMBER(8) NOT NULL,
         SELL_PRICE NUMBER(8,2) NOT NULL, CHECK(SELL_PRICE > 0),
         COST_PRICE NUMBER(8,2) NOT NULL, CHECK(COST_PRICE > 0)
 );
 
 CREATE TABLE SALESMAN_MASTER_54(
         SALESMAN_NO VARCHAR2(6) PRIMARY KEY, CHECK(SALESMAN_NO LIKE 'S%'),
         NAME VARCHAR2(20) NOT NULL,
         ADDRESS1 VARCHAR2(10) NOT NULL,
         ADDRESS2 VARCHAR(10) NOT NULL,
         CITY VARCHAR2(20),
         PINCODE NUMBER(7),
         STATE VARCHAR2(20),
         SAL NUMBER(8,2) NOT NULL, CHECK(SAL <> 0),
         TGT_TO_GET NUMBER(6,2) NOT NULL, CHECK(TGT_TO_GET <> 0),
         YTD_SALES NUMBER(6,2) NOT NULL,
         REMARKS VARCHAR2(20)
 );
 
 
 CREATE TABLE SALES_ORDER_54(
         ORDER_NO VARCHAR2(6) PRIMARY KEY, CHECK(ORDER_NO <> 'O%'),
         ORDER_DATE DATE,
         CLIENT_NO VARCHAR2(6) REFERENCES CLIENT_MASTER_54(CLIENTNO),
         DELY_ADDRESS VARCHAR2(25),
         SALESMAN_NO VARCHAR2(6) REFERENCES SALESMAN_MASTER_54(SALESMAN_NO),
         DELY_TYPE CHAR(1) DEFAULT ('F') CHECK (DELY_TYPE IN ('P', 'F')),
         BILLED_YN CHAR(1),
         DELY_DATE DATE,
         ORDER_STATUS VARCHAR2(10) CHECK (ORDER_STATUS IN ('in process', 'fulfilled', 'backorder', 'cancelled')),
         CHECK(DELY_DATE > ORDER_DATE)
 );
 
 CREATE TABLE SALES_ORDER_DETAILS_54(
         ORDER_NO VARCHAR2(6) REFERENCES SALES_ORDER_54(ORDER_NO),
         PRODUCT_NO VARCHAR2(6) REFERENCES PRODUCT_MASTER_54(PRODUCT_NO),
         QTY_ORDER NUMBER(8),
         QTY_DISP NUMBER(8),
         PRODUCT_RATE NUMBER(10,2),
         PRIMARY KEY(ORDER_NO, PRODUCT_NO)
 );
 
 INSERT ALL
 INTO CLIENT_MASTER_54 VALUES ('C00001', 'Ivan Bayross', 'Mumbai', 400054, 'Maharashtra', 15000)
 INTO CLIENT_MASTER_54 VALUES ('C00002', 'Mamta Mazumdar', 'Madras', 780001, 'Tamil Nadu', 0)
 INTO CLIENT_MASTER_54 VALUES ('C00004', 'Ashwini Joshi', 'Bangalore', 560001, 'Karnataka', 0)
 INTO CLIENT_MASTER_54 VALUES ('C00003', 'Chhaya Bankar', 'Mumbai', 400057, 'Maharashtra', 5000)
 INTO CLIENT_MASTER_54 VALUES ('C00005', 'Hansel Colaco', 'Mumbai', 400060, 'Maharashtra', 2000)
 INTO CLIENT_MASTER_54 VALUES ('C00006', 'Deepak Sharma', 'Mangalore', 560050, 'Karanataka', 0)
 SELECT * FROM DUAL;
 
 INSERT ALL
 INTO PRODUCT_MASTER_54 VALUES ('P00001','T-shirts',5,'Piece',200,50,350,250)
 INTO PRODUCT_MASTER_54 VALUES ('P0345','Shirts',6,'Piece',150,50,500,350)
 INTO PRODUCT_MASTER_54 VALUES ('P06734','Cotton Jeans
 ',5,'Piece',100,20,600,450)
 INTO PRODUCT_MASTER_54 VALUES ('P07865','Jeans',5,'Piece',100,20,750,500)
 INTO PRODUCT_MASTER_54 VALUES ('P07868','Trousers',2,'Piece',150,50,850,550)
 INTO PRODUCT_MASTER_54 VALUES ('P07885','PuMOvers',2.5,'Piece',80,30,700,450)
 INTO PRODUCT_MASTER_54 VALUES ('P07965','Denim Shirts
 ',4,'Piece',100,40,350,250)
 INTO PRODUCT_MASTER_54 VALUES ('P07975','Lyers Tops',5,'Piece',70,30,300,175)
 INTO PRODUCT_MASTER_54 VALUES ('P08865','Skirts
 ',5,'Piece',75,30,450,300)
 INTO PRODUCT_MASTER_54 VALUES ('P03453','Leggings',5,'Piece',200,50,350,250)
 SELECT * FROM DUAL;
 
 INSERT ALL
 INTO SALESMAN_MASTER_54 VALUES('S00001','Aman','A/14','Worli','Mumbai',400002,'Maharashtra',3000,100,50,'Good')
 INTO SALESMAN_MASTER_54 VALUES('S00002','Omkar','65','Nariman','Mumbai',400001,'Maharashtra',3000,200,100,'Good')
 INTO SALESMAN_MASTER_54 VALUES('S00003','Raj','P-7','Bandra','Mumbai',400032,'Maharashtra',3000,200,100,'Good')
 INTO SALESMAN_MASTER_54 VALUES('S00004','Ashish','A/5','Juhu','Mumbai',400044,'Maharashtra',3500,200,150,'Good')
 SELECT * FROM DUAL;
 
 INSERT ALL
 INTO SALES_ORDER_54 VALUES('O19001','10-JUL-02', 'C00001', '69 U.Bc Road', 'S00001', 'F', 'N', '20-JUL-02', 'in process')
 INTO SALES_ORDER_54 VALUES('O19002','15-JUN-02', 'C00002', '108 U.Dc Road', 'S00002', 'P', 'N', '27-JUN-02', 'cancelled')
 INTO SALES_ORDER_54 VALUES('O46865','11-FEB-02', 'C00003', '420 U.Kc Road', 'S00003', 'F', 'Y', '20-FEB-02', 'fulfilled')
 INTO SALES_ORDER_54 VALUES('O19003','15-MAR-02', 'C00001', '6969 U.Rc Road', 'S00001', 'F', 'Y', '07-APR-02', 'fulfilled')
 INTO SALES_ORDER_54 VALUES('O46866','12-MAY-02', 'C00004', '69 Hatt Yu Road', 'S00002', 'P', 'N', '22-MAY-02', 'cancelled')
 INTO SALES_ORDER_54 VALUES('O19008','14-JUL-02', 'C00005', '420 I.Best Road', 'S00004', 'F', 'N', '26-JUL-02', 'in process')
 SELECT * FROM DUAL;
 
 INSERT ALL
 INTO SALES_ORDER_DETAILS_54 VALUES('O19001', 'P00001', 4, 4, 525)
 INTO SALES_ORDER_DETAILS_54 VALUES('O19001', 'P07965', 2, 1, 8400)
 INTO SALES_ORDER_DETAILS_54 VALUES('O19001', 'P07885', 2, 1, 5250)
 INTO SALES_ORDER_DETAILS_54 VALUES('O19002', 'P00001', 10, 0, 525)
 INTO SALES_ORDER_DETAILS_54 VALUES('O46865', 'P07868', 3, 3, 3150)
 INTO SALES_ORDER_DETAILS_54 VALUES('O46865', 'P07885', 3, 1, 5250)
 INTO SALES_ORDER_DETAILS_54 VALUES('O46865', 'P00001', 10, 10, 525)
 INTO SALES_ORDER_DETAILS_54 VALUES('O46865', 'P0345', 4, 4, 1050)
 INTO SALES_ORDER_DETAILS_54 VALUES('O19003', 'P03453', 2, 2, 1050)
 INTO SALES_ORDER_DETAILS_54 VALUES('O19003', 'P06734', 1, 1, 12000)
 INTO SALES_ORDER_DETAILS_54 VALUES('O46866', 'P07965', 1, 0, 8400)
 INTO SALES_ORDER_DETAILS_54 VALUES('O46866', 'P07975', 1, 0, 1050)
 INTO SALES_ORDER_DETAILS_54 VALUES('O19008', 'P00001', 10, 5, 525)
 INTO SALES_ORDER_DETAILS_54 VALUES('O19008', 'P07975', 5, 3, 1050)
 SELECT * FROM DUAL;
1)Find the names of all clients having ‘a’ as the second letter in their names.
 SELECT NAME FROM CLIENT_MASTER_54 WHERE NAME LIKE('_a%');
2)Find out the clients who stay in a city whose second letter is 'a';.
 SELECT CITY FROM CLIENT_MASTER_54 WHERE CITY LIKE('_a%');
3)Find the list of all clients who stay in MUMBAI OR DELHI;
 SELECT NAME FROM CLIENT_MASTER_54 WHERE CITY='Mumbai' OR CITY='Delhi' ;
 SELECT NAME FROM CLIENT_MASTER_54 WHERE CITY IN('Mumbai','Delhi') ;
4)Print the list of clients whose bal_due is greater than value 10000.
 SELECT NAME FROM CLIENT_MASTER_54 WHERE  BALANCEDUE >10000;
5)Print the information from sales_order table for orders placed in the month of January.
 SELECT NAME FROM CLIENT_MASTER_54 WHERE  BALANCEDUE >10000;
6)Display the order information for client_no 'C00001' and 'C00002'.
- SELECT * FROM SALES_ORDER WHERE CLIENTNO='C00001' OR CLIENTNO='C00002';


7)Find products whose selling price is greater than 2000 and less than or equal to 5000.
- SELECT * FROM PRODUCT_MASTER WHERE SELLPRICE > 2000 AND SELLPRICE <= 5000;


8)Find products whose selling price is more than 1500. Calculate a new selling price as original selling price * 0.15. Rename the new column in the above query as new_price.
- SELECT SELL_PRICE, SELL_PRICE * 0.15 "New_Price" FROM PRODUCT_MASTER WHERE SELL_PRICE > 1500;

9)List the names, city and state of clients who are not in the state of 'Maharashtra'.
- SELECT NAME, CITY, STATE FROM CLIENT_MASTER WHERE CITY NOT LIKE 'Maharashtra';


10)Count the total number of orders.
- SELECT COUNT(ORDER_NO) FROM SALES_ORDER;


11)Calculate the average price of all the products.
- SELECT AVG(SELL_PRICE) FROM PRODUCT_MASTER;


12)Determine the maximum and minimum product prices. Rename the output as max_price and min_price respectively.
- SELECT MAX(SELL_PRICE) "max_price", MIN(SELL_PRICE) "min_price" FROM PRODUCT_MASTER;

13)Count the number of products having price greater than or equal to 1500.
- SELECT COUNT(PRODUCT_NO) FROM PRODUCT_MASTER WHERE SELL_PRICE >= 1500;


14)Find all the products whose qty_on_hand is less than reorder level.
- SELECT * FROM PRODUCT_MASTER WHERE QTY_ON_HAND < REORDER_LVL;


15)Display the order number and day on which clients placed their order.
- SELECT ORDER_NO, ORDER_DATE FROM SALES_ORDER;
